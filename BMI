import java.awt.*;
import java.awt.event.*
import javax.swing.*;
import java.swing.border.titleborder;

public class GUI_use_BMI extend JFrame{
  
  //Create text fields for name, age, weight, height
  
  private JTextField jtfName = new JTextField();
  private JTextField jtAge = new JTextField();
  private JTextField jtfWeight = new JTextField();
  private JTextField jtfHeight = new JTextField();
  private JTextField jtfBMI = new JTextField();
  private JTextField jtfStatus = new JTextField();
  
  //Create a Compute BMi button
  privateJButton jbtComputeBMI = new JButton("Compute BMI")
  
  public GUI_use_BMI(){
    //Panel p1 to hold labels and text fields
    JPanel p1 = new JPanel(new GridLayout(6,2));
    p1.add(new JLabel("Name"));
    p1.add(jtfName);
    p1.add(new JLabel("Age"));
    p1.add(jtfAge);
    p1.add(new JLabel("Weight"));
    p1.add(jtfWeight);
    p1.add(new JLabel("Height"));
    p1.add(jtfHeight);
    p1.add(new JLabel("BMI"));
    p1.add(jtfBMI);
    p1.add(new JLabel("Status"));
    p1.add(jtfStatus);
      TitleBorder("Enter name, age, weight, and height")
    
    //Panel p2 to hold the button
    JPanel p2 = new JPanel(new FlowLayout(FlowLayout.RIGHT));
    p2.add(jbtCompute);
    
    //Add the panels to the frame
    add(p1, BorderLayout.CENTER);
    add(p2, BorderLayout.SOUTH);
    
    //Register listener
    jb
    
  }
  
  public static void main(String[] args){
    JFrame gui = new JFrame();
    
    gui.setSize(400, 300);
    gui.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    
    
  }
  
  private class buttomlistened()

}

class BMI{

  private String name;
  private int age;
  private double weight; // in pounds
  private double height; // in inches
  public static final double KILOGRAMS_PER_POUND = 0.45359237;
  public static final double METERS_PER_INCH = 0.0254;
  
  
  
  public BMI(String name, int age, double weight, double height){
    this.name = name;
    this.age = age;
    this.weight =  weight;
    this.height = height;
  }
  
  public BMI(String name, double weight, double height){
    this(name, 20, weight, height);
  }
  
  public double getBMI(){
    double bmi = weight * KILOGRAMS_PER_POUND / (Math.pow( ( height * METERS_PER_INCH) , 2 ) );
    return Math.round( bmi * 100) / 100.0;
  } 
  //Compute BMI
  
  public String getStatus(){
    double bmi = getBMI();
    if (bmi < 18.5)
      return "Underweight";
    else if (bmi < 25)
      return "Normal";
    else if (bmi < 30)
      return "Overweight";
    else 
      return "Obese";
  }
  //Distingush the status
  
  public String getName(){
    return name;
  }
  
  public int getAge(){
    return age;
  }
  public double getWeight(){
    return weight;
  }
  public double getHeight(){
    return height;
  }
  
  
}
